(self.webpackChunk_teatak_ui=self.webpackChunk_teatak_ui||[]).push([[377],{63065:(e,n,t)=>{"use strict";t.d(n,{Z:()=>v});var i=t(22122),l=t(81253),o=t(67294),a=t(38456),r=t.n(a),c=t(10043),s=t.n(c),u=t(35317),p=t(86032),d=["node","inline","className","children"],m={code:function(e){e.node;var n=e.inline,t=e.className,a=e.children,r=(0,l.Z)(e,d),c=/language-(\w+)/.exec(t||"");return!n&&c?o.createElement(u.Z,(0,i.Z)({style:p.Z,language:c[1],PreTag:"div",children:String(a).replace(/\n$/,"")},r)):o.createElement("code",(0,i.Z)({className:t},r),a)}};const v=function(e){return o.createElement("div",{className:"markdown"},o.createElement(r(),{components:m,children:e.children,remarkPlugins:[s()]}))}},11377:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});var i=t(34699),l=t(67294),o=t(22261),a=t(63065);const r=function(){var e=(0,l.useState)(!1),n=(0,i.Z)(e,2),t=n[0],r=n[1];return l.createElement("div",{className:"page"},l.createElement("h1",null,"Trigger"),l.createElement("h2",null,"visible onVisibleChange"),l.createElement("div",{className:"examples"},l.createElement(o.T,null,l.createElement(o.zx,{type:"outlined",onClick:function(e){e.stopPropagation(),r(!t)}},"click to trigger"),l.createElement(o.xz,{visible:t,position:"topLeft",content:l.createElement("div",null,"content"),onVisibleChange:function(e){r(e)}},l.createElement(o.zx,{rounded:!0,type:"outlined"},"click")))),l.createElement(a.Z,{children:'\n```javascript\nexport default () => {\n    const [visible, setVisible] = useState(false)\n    return <div className="page">\n        <h1>Trigger</h1>\n        <div className="examples">\n            <Space>\n                <Button type="outlined" onClick={(e) => {\n                    e.stopPropagation()\n                    setVisible(!visible)\n                }}>click to trigger</Button>\n                <Trigger\n                    visible={visible}\n                    content={<div>content</div>}\n                    onVisibleChange={(v) => {\n                        setVisible(v)\n                    }}\n                >\n                    <Button type="outlined">click</Button>\n                </Trigger>\n            </Space>\n        </div>\n    </div>\n}\n```\n'}),l.createElement("h2",null,"tooltip"),l.createElement("div",{className:"examples"},l.createElement(o.xz,{tooltip:!0,content:l.createElement("div",null,"tooltip content on hover")},l.createElement(o.zx,{type:"filled"},"hover"))),l.createElement(a.Z,{children:"\n## API\n\n| Property  | Description | Type | Default |\n| --------- | ------- | ------- | ------- |\n| action           | PropTypes.oneOf(['click', 'hover']) | string | click |\n| position         | PropTypes.oneOf(['top', 'topLeft', 'topRight', 'bottom', 'bottomLeft', 'bottomRight']) | string | bottom |\n| autoFit          | auto fit | boolean | true |\n| arrow            | show arrow | boolean | true |\n| tooltip          | tooltip style | boolean | false |\n| visible          | visible | boolean | false |\n| defaultVisible   | defaultVisible | boolean | false |\n| content          | pop content | element | - |\n| transitionClass  | transition class suffix | string | fade |\n| onVisibleChange  | call back | (visible: boolean) => void | - |\n\n"}))}}}]);