(self.webpackChunk_teatak_ui=self.webpackChunk_teatak_ui||[]).push([[70],{85304:(n,t,e)=>{"use strict";e.d(t,{Z:()=>d});var o=e(22122),i=e(81253),c=e(67294),s=e(38456),l=e.n(s),a=e(10043),r=e.n(a),f=e(46914),m=e(86032),u=["node","inline","className","children"],p={code:function(n){n.node;var t=n.inline,e=n.className,s=n.children,l=(0,i.Z)(n,u),a=/language-(\w+)/.exec(e||"");return!t&&a?c.createElement(f.Z,(0,o.Z)({style:m.Z,language:a[1],PreTag:"div",children:String(s).replace(/\n$/,"")},l)):c.createElement("code",(0,o.Z)({className:e},l),s)}};const d=function(n){return c.createElement("div",{className:"markdown"},c.createElement(l(),{components:p,children:n.children,remarkPlugins:[r()]}))}},10070:(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>l});var o=e(34699),i=e(67294),c=e(85304),s=e(71959);const l=function(){var n=(0,s.lm)(),t=(0,o.Z)(n,2),e=t[0];return(0,t[1])({maxCount:20}),i.createElement("div",{className:"page"},i.createElement("h1",null,"Notification"),i.createElement("div",{className:"examples"},i.createElement(s.T,null,i.createElement(s.zx,{onClick:function(){e.info({position:"top",duration:0,content:"This is an info message!",closeable:!0})},type:"filled"},"top"),i.createElement(s.zx,{color:"warning",onClick:function(){e.warning({position:"bottom",content:"This is an info message!"})},type:"filled"},"bottom"),i.createElement(s.zx,{color:"success",onClick:function(){e.success({position:"topLeft",content:"This is an info message!"})},type:"filled"},"top left"),i.createElement(s.zx,{color:"error",onClick:function(){e.error({position:"topRight",content:"This is an info message!"})},type:"filled"},"top right"),i.createElement(s.zx,{onClick:function(){e.info({closeable:!0,duration:0,showIcon:!1,position:"bottomLeft",content:"This is an info message!"})},type:"filled"},"bottom left"),i.createElement(s.zx,{onClick:function(){e.info({position:"bottomRight",content:"This is an info message!",actions:i.createElement(s.T,null,i.createElement(s.zx,{size:"tiny",onClick:function(n){console.log("clicked")}},"click me"))})},type:"filled"},"bottom right"))),i.createElement(c.Z,{children:"\n```javascript\nexport default () => {\n    const [notification, setChecked] = useNotification()\n    setChecked({ maxCount: 20 })\n    return <div className=\"page\">\n        <Space>\n            <Button\n                onClick={() => {\n                    notification.info({\n                        position: 'top',\n                        content: 'This is an info message!',\n                        closeable: true,\n                    });\n                }}\n                type='filled'\n            >\n                top\n            </Button>\n            <Button\n                color=\"warning\"\n                onClick={() => {\n                    notification.warning({\n                        position: 'bottom',\n                        content: 'This is an info message!'\n                    });\n                }}\n                type='filled'\n            >\n                bottom\n            </Button>\n            <Button\n                color=\"success\"\n                onClick={() => {\n                    notification.success({\n                        position: 'topLeft',\n                        content: 'This is an info message!'\n                    });\n                }}\n                type='filled'\n            >\n                top left\n            </Button>\n            <Button\n                color=\"error\"\n                onClick={() => {\n                    notification.error({\n                        position: 'topRight',\n                        content: 'This is an info message!'\n                    });\n                }}\n                type='filled'\n            >\n                top right\n            </Button>\n            <Button\n                onClick={() => {\n                    notification.info({\n                        closeable: true,\n                        duration: 0,\n                        showIcon: false,\n                        position: 'bottomLeft',\n                        content: 'This is an info message!'\n                    });\n                }}\n                type='filled'\n            >\n                bottom left\n            </Button>\n            <Button\n                onClick={() => {\n                    notification.info({\n                        position: 'bottomRight',\n                        content: 'This is an info message!',\n                        actions: <Space>\n                            <Button size=\"tiny\" onClick={(e) => {\n                                console.log(\"clicked\")\n                            }}>click me</Button>\n                        </Space>\n                    });\n                }}\n                type='filled'\n            >\n                bottom right\n            </Button>\n        </Space>\n    </div>\n}\n```\n        "}))}}}]);