(self.webpackChunk_teatak_ui=self.webpackChunk_teatak_ui||[]).push([[111],{63065:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var l=n(22122),a=n(81253),r=n(67294),o=n(38456),c=n.n(o),d=n(10043),i=n.n(d),u=n(46914),s=n(80682),m=["node","inline","className","children"],p={code:function(e){e.node;var t=e.inline,n=e.className,o=e.children,c=(0,a.Z)(e,m),d=/language-(\w+)/.exec(n||"");return!t&&d?r.createElement(u.Z,(0,l.Z)({style:s.Z,language:d[1],PreTag:"div",children:String(o).replace(/\n$/,"")},c)):r.createElement("code",(0,l.Z)({className:n},c),o)}};const f=function(e){return r.createElement("div",{className:"markdown"},r.createElement(c(),{components:p,children:e.children,remarkPlugins:[i()]}))}},56858:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>c});var l=n(67294),a=n(2630),r=n(63065),o=n(76945);const c=function(){return l.createElement("div",null,l.createElement("div",{className:"space-examples"},l.createElement("div",null,"default:"),l.createElement(a.T,null,"Text",l.createElement(a.zx,null,"Button"),l.createElement(a.zx,{type:"filled",color:"primary"},"Filled"),l.createElement(a.zx,{type:"outlined",color:"primary"},"Outlined"),l.createElement(a.zx,{type:"filled",rounded:!0,color:"danger"},l.createElement(o.Z,null)))),l.createElement(r.Z,{children:'\n```javascript\nimport React from "react";\nimport {Space,Row,Col} from "@teatak/ui";\n\nexport default () => <div className="examples">\n    <div>default:</div>\n    <Space>\n        Text\n        <Button>Button</Button>\n        <Button type="filled" color="primary">Filled</Button>\n        <Button type="outlined" color="primary">Outlined</Button>\n        <Button type="filled" rounded color="danger"><Delete/></Button>\n    </Space>\n</div>       \n```\n        '}),l.createElement(r.Z,{children:"\n## API\n\n| Property  | Description | Type | Default |\n| --------- | ------- | ------- | ------- |\n| type      | can be set to 'filled','outlined','default' | string | default |\n| size      | can be set to small large or default | string | default |\n| rounded   | rounded | boolean | false |\n| disabled  | disabled state of button\t | boolean | false |\n| htmlType  | htmlType | string | button |\n| onClick   | set the handler to handle click event\t| (event) => void | - |\n        "}))}}}]);